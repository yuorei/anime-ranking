directive @goField(forceResolver: Boolean, name: String) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

type User {
  userID: ID!
  name: String!
  password:String!
  relatedAnime:[AnimeRanking!] @goField(forceResolver: true)
}

type AnimeRanking {
  animeInformation:AnimeInformation! @goField(forceResolver: true)
  rank: Int!
  user: User! @goField(forceResolver: true)
}

type AnimeInformation {
  animeID: ID!
  title: String!
  imageURL: String!
  relatedAnime: [AnimeInformation!] @goField(forceResolver: true)
  registerUser: [User!] @goField(forceResolver: true)
}

input UserInformationInput {
  naem: String!
  password: String!
}

input NewAnimeRankingInput {
  title: String!
  imageURL: String!
  rank: Int!
  userID: ID!
}

type Query {
  GetUserInformation: [User!]!# クエリ名allとかに変える
  GetAnimeRanking: [AnimeRanking!]!# クエリ名allとかに変える
    # ランキングが持っているアニメの参照
    # アニメが持っているユーザー
    #
}

type Mutation {
  registerUser(input: UserInformationInput!): User!
  createAnimeRanking(input: NewAnimeRankingInput!): AnimeRanking!
}
